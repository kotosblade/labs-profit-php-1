<?php
/**
 * 1) Создание класса
 * -создание свойств в классе
 * -создание методов в классе
 * -использование $this в свойстве
 * 2) Создание объектов
 * 3) Обращение и изменение свойст и методов класса в объекте
 *
 * Date: 19.08.2017
 * Time: 15:14
 */

// Создаем класс ..............................................................
// -Класс начинается с ключевого слова class
// -Название класса принято писать с большой буквы, в стиле CamelCase
// -Далее, в фигурных скобках, пишется определение класса – список его свойств и методов (функций).
class Table {
    // Задаем свойства:
    // Мы указали, что объекты класса будут иметь два публичных свойства - $color и $legs
    // Слово public обозначает, что свойство будет публичным, то есть доступным всем пользователям наших объектов
    public $color;
    public $legs;

    // Задаем методы:
    // метод Show()
    public function show()
    {
        echo 'Привет, я стол.';
        // $this - это указатель на текущий объект (те связан с тем объектом, из которого он вызван.)
        // $this->legs - свойства legs этого объекта
        // вызывается только если
        echo 'У меня '. $this->legs .' ноги.';
        echo '<br>';
    }
}

// Создаем объект класса ......................................................
// пр. создадим два объекта (экземпляра) класса Table
$table1 = new Table;
$table2 = new Table;

// Объект имеет свой типданных [object]
//var_dump($table1); // object(Table)#1 (2) { ["color"]=> NULL ["legs"]=> NULL }

// Зададим значения свойств в объектах класса .................................
// '->' - оператор доступа к свойству (во многих языках этот оператор выглядит, как '.', но в PHP '.' )
$table1->color = 'black';
$table1->legs = 4;

$table2->color = 'white';
$table2->legs = 3;

// Зададим методы

// Прочитаем свойство
echo $table1->color . ' и ' . $table1->legs . ' ноги.';
echo '<br>';
$table1->show();
echo '<br><br>';

echo $table2->color;
echo '<br>';
$table2->show();
