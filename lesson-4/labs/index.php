<?php
/**
 * Created by PhpStorm.
 * User: kotos
 * Date: 15.08.2017
 * Time: 3:32
 *
 *
 * PHP-1: введение в профессию

О языке программирования PHP ходят много мифов. Мол неправильный он, некрасивый, ООП в нём ненастоящее... Почему же тогда его используют Facebook и ВКонтакте, Википедия и Badoo?

- потому что это очень гибкий язык, позволяющий создавать веб-приложения любой сложности!

- потому что изучить PHP очень легко, а начать применять на практике можно буквально после нескольких уроков!

- потому что современный PHP очень быстрый и нетребовательный к памяти, идеален для применения в системах с высокой нагрузкой!

Хотите научиться программировать на PHP?

Что мы с вами изучим в ходе интенсива:

- Научимся писать программы на PHP и поймем, как из них строится веб-приложение

- Познакомимся с базовыми возможностями языка, включая объектно-ориентированное программирование

- Научимся взаимодействовать с пользователем нашего сайта

- Освоим азы работы с базой данных

- Поговорим о правильной архитектуре и об использовании современных методик программирования

Ведет интенсив преподаватель, который вот уже более 10 лет активно занимается программированием на PHP и управлением командами программистов.

Подготовка к курсу

1. Вам будет нужно установить локальный веб-сервер. Если вы пользуетесь платформой Windows, мы рекомендуем вам OpenServer, который можно скачать на странице "Партнеры" нашего сайта.

2. Вам будет нужен хороший текстовый редактор. Если вы намерены в дальнейшем серьезно заниматься веб-программированием, скачайте и установите себе PHPStorm. Бесплатная пробная версия будет действовать 30 дней, этого вполне достаточно для нашего курса. Впрочем, на первое время подойдет и более простой редактор, например Notepad++

Методичка : http://fi2.php.net/manual/ru/

_________________________________________________________________________________________________________________________

1 урок Быстрый старт: выражения и переменные, типы

Что нужно, чтобы начать изучать PHP?

- Установка и настройка локального сервера

- Понимание места PHP в веб-программировании

- Учимся встраивать PHP в HTML и запускать свою программу

- Изучаем понятие выражения, типа выражения, переменной

- Знакомимся с понятием "функция"

ДОМАШНЯЯ РАБОТА

1.Добейтесь корректной работы вашего сервера. Тщательно повторите шаги, которые мы делали на уроке. В случае затруднений - обращайтесь в чат поддержки!

2.Добавьте себе в закладки официальный мануал по языку http://fi2.php.net/manual/ru/

3.В PHP есть функция var_dump($something), которая выводит подробную информацию о значениях и их типах. Попробуйте написать что-нибудь вроде var_dump(2*2); чтобы увидеть, как она работает. Изучите с помощью этой функции следующие выражения:

- 3 / 1

- 1 / 3

- '20cats' + 40

- 18 % 4 (прочтите главу http://fi2.php.net/manual/ru/language.operators.arithmetic.php чтобы узнать, что это такое)

4.Говорят, что в PHP "всё является выражением". Интересно, что даже присваивание переменной какого-либо значения тоже является выражением! Изучите примеры ниже и дайте ответ - что же является значением выражения присваивания?

- echo ($a = 2);

- $x = ($y = 12) - 8; echo $x;

5.В PHP имеется логический (boolean) тип, имеющий два значения - true (истина) и false (ложь). Изучите с помощью var_dump() следующие выражения и объясните их (прочитайте предварительно http://fi2.php.net/manual/ru/language.operators.comparison.php ):

1 == 1.0

1 === 1.0

'02' == 2

'02' === 2

'02' == '2'

_________________________________________________________________________________________________________________________

2 урок Функции. Операторы контроля. Включение файлов.

На уроке мы подробно разберем следующие темы:

- Что такое "булев тип", как им пользоваться

- Какие логические операции есть в PHP

- Как написать собственную функцию и пользоваться ей

- Как строить свою программу из нескольких файлов

- Что такое модульные тесты и как в простейшем варианте начать ими пользоваться

ДОМАШНЯЯ РАБОТА

1. Напишите программу, которая составит и выведет в браузер таблицу истинности ( https://ru.wikipedia.org/wiki/%D0%A2%D0%B0%D0%B1%D0%BB%D0%B8%D1%86%D0%B0_%D0%B8%D1%81%D1%82%D0%B8%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D0%B8 ) для логических операторов &&, || и xor.

2. Составьте функцию вычисления дискриминанта квадратного уравнения. Покройте ее тестами. Используя эту функцию, напишите программу, которая решает квадратное уравнение. Оформите красивый вывод решения.

3. Проведите самостоятельное исследование на тему "Что возвращает оператор include, если его использовать как функцию?". Используйте руководство по языку, составьте и приложите примеры, иллюстрирующие ваше исследование.

4.* Составьте функцию, которая на вход будет принимать имя человека, а возвращать его пол, пытаясь угадать по имени (null - если угадать не удалось). Вам придется самостоятельно найти нужные вам строковые функции. Начните с написания тестов для функции.

_________________________________________________________________________________________________________________________

3 урок Массивы. Циклы. Взаимодействие с пользователем.

Знакомимся с массивами - одной из самых мощных возможностей языка PHP.

- Массивы, индексы

- Цикл foreach

- Функции для работы с массивами

- Суперглобальные массивы, связанные с протоколом HTTP и организация взаимодействия с пользователем

ДОМАШНЯЯ РАБОТА

1. Напишите программу-калькулятор

- Форма для ввода двух чисел, выбора знака операции и кнопка "равно"

- Данные пусть передаются методом GET из формы (да, можно и так!) на скрипт, который их примет и выведет выражение и его результат

- * Попробуйте улучшить программу. Пусть данные отправляются на ту же страницу на PHP, введенные числа останутся в input-ах, а результат появится после кнопки "равно"

2. Создайте примитивную фотогалерею из двух страниц

- Пусть на главной странице галереи выводятся 3-4 изображения

- Каждое из них пусть будет ссылкой вида /image.php?id=42, где 42 - условный номер изображения

- На странице image.php вы по номеру понимаете, какое изображение вывести в браузер и выводите его. Я ожидаю, что для этого пункта программы вы создатите массив вида [1 => 'cat.jpg', 2=>'dog.jpg', ... ], однако вы можете предложить и другое решение

_________________________________________________________________________________________________________________________

3.5 урок Повторение пройденного

Повторяем пройденное на предыдущих уроках, подробно разбираем домашнее задание

ДОМАШНЯЯ РАБОТА

Пишем игру в города!

1. Создайте "базу" городов. Это, конечно же, массив с названиями городов, который вам придется заполнить вручную

2. Напишите функцию (и тест для нее), которая по первой букве названия города вёрнет из этого массива первое встреченное название

3. Напишите скрипт, который примет из формы введенное пользователем название города, определит у него последнюю букву и, применив функцию из пункта 2, "сделает ход" - напечатает название города, который начинается на эту букву

_________________________________________________________________________________________________________________________

4 урок Работа с файлами на сервере. Загрузка от клиента.

Изучаем подробности и тонкости работы с файлами в PHP:

- Немного теории: цикл while

- Способы чтения файла в память

- Запись данных в файл

- Один неочевидный момент с оператором include

Учимся загружать файлы от клиента на сервер:

- Как правильно построить форму загрузки

- Как принять файл на сервере



_________________________________________________________________________________________________________________________

5 урок Классы и объекты. Введение в ООП.

Изучим на уроке:

- Общие понятия объектно-ориентированного программирования

- Классы и объекты в PHP

- Наследование классов

- Модификаторы видимости

- Конструктор объекта

ДОМАШНЯЯ РАБОТА

Модифицируем предыдущее домашнее задание в соответствии с новыми знаниями:

1. Создайте класс GuestBook, который будет удовлетворять следующим требованиям:

- В конструктор передается путь до файла с данными гостевой книги, в нём же происходит чтение данных из нее (используйте защищенное свойство объекта для хранения данных)

- Метод getData() возвращает массив записей гостевой книги

- Метод append($text) добавляет новую запись к массиву записей

- Метод save() сохраняет массив в файл

2.* Продумайте - какие части функционала можно вынести в базовый (родительский) класс TextFile, а какие - сделать в унаследованном от него классе GuestBook

3. Создайте класс Uploader в соответствии с требованиями:

- В конструктор передается имя поля формы, от которого мы ожидаем загрузку файла

- Метод isUploaded() проверяет - был ли загружен файл от данного имени поля

- Метод upload() осуществляет перенос файла (если он был загружен!) из временного места в постоянное

4.* Попробуйте некоторые методы заканчивать конструкцией return $this; и придумайте этому применение

_________________________________________________________________________________________________________________________

6 урок Объектно-ориентированный подход.

Продолжаем рассматривать объектно-ориентированное программирование в PHP:

- Концепция ООП

- Классы, как типы, тайп-хинтинг

- Понятие модели данных, введение в ORM

- Буфер вывода в PHP

- Объект представления, разделение бизнес-логики и логики представления

ДОМАШНЯЯ РАБОТА

1. Создайте объект класса View, удовлетворяющий следующим требованиям:

- Конструктор не имеет аргументов

- Есть метод assign($name, $value), чья задача - сохранить данные, передаваемые в шаблон по заданному имени (используйте защищенное свойство - массив для хранения этих данных)

- Есть метод display($template), который отображает указанный шаблон с заранее сохраненными данными

- * Метод render($template), который аналогичен методу display(), но не выводит шаблон с данными в браузер, а возвращает его

2. Перепишите предыдущее ДЗ, используя ВЕЗДЕ объекты класса View для отображения страниц сайта

3. Создайте на своем учебном сайте раздел "Новости". Для этого:

- Создайте класс Article - модель одной новости

- Создайте класс News - модель хранилища новостей (аналогично гостевой книге в предыдущем ДЗ и на уроке)

- Две страницы сайта

1.news.php - отображает список всех новостей. Заголовок у каждой - ссылка на страницу этой новости, под заголовком - краткий текст

2.article.php?id=NNN - отображает новость номер NNN с полным текстом

4. При выполнении задачи 3. весь код должен быть в классах. Используйте при необходимости тайп-хинтинг. Весь вывод - через ранее созданный объект View.

_________________________________________________________________________________________________________________________

7 урок Работа с базой данных

Знакомимся с базами данных и учимся работать с одной из них из PHP:

- Понятие реляционной базы данных

- Знакомство с MySQL

- Создание таблиц с помощью программы-клиента

- Введение в язык SQL, создание, модификация и чтение записей

- Использование PDO для взаимодействия с БД из PHP

ДОМАШНЯЯ РАБОТА

Делаем с нуля веб-приложение, использующее базу данных

1. Создайте класс DB

- В конструкторе устанавливается и сохраняется соединение с базой данных. Параметры соединения берем из файла конфига

- Метод execute(string $sql) выполняет запрос и возвращает true либо false в зависимости от того, удалось ли выполнение

- Метод query(string $sql, array $data) выполняет запрос, подставляет в него данные $data, возвращает данные результата запроса либо false, если выполнение не удалось

2. Создайте таблицу news с полями "заголовок", "текст", "автор". Заполните ее 3-5 новостями. Запишите запросы на языке SQL, которые вы использовали и приложите к своему ДЗ

3. Создайте две страницы сайта, используя технику шаблонов и класс View из предыдущего ДЗ:

- index.php выводит все новости (самая новая - наверху)

- article.php?id=N выводит одну новость, с id=N

_________________________________________________________________________________________________________________________

8 урок Архитектура проекта

Обсуждаем архитектуру веб-приложений на PHP:

- Знакомство с автозагрузкой

- Пространства имен

- Стандарты PSR

- Архитектура MVC

Методичка : http://www.php-fig.org/psr/

ДОМАШНЯЯ РАБОТА

Используя в своем проекте изученный шаблон MVC, создайте полноценное веб-приложение (сайт), выбрав один из трех указанных ниже проектов.

Важные требования к приложению, независимо от выбранного проекта:

- MVC

- Законченный внешний вид

- Использование базы данных

Проекты на выбор:

- Персональный сайт

- Разделы: обо мне, фотогалерея, гостевая книга

- Админ-панель: возможность смены текста "обо мне", добавления фотографий, удаления записей из гостевой книги

- Сайт о любимом музыкальном исполнителе

- Разделы: фотогалерея, список альбомов по годам

- Админ-панель: возможность добавления фотографий, альбомов

- Сайт о вашем городе

- Разделы: заглавная страница с приветственным текстом, фотогалерея, расписание поездов дальнего следования

- Админ-панель: возможность редактирования текста, добавления фото в галерею, редактирования расписания поездов
 */